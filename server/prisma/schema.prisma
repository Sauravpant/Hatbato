generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id              Int       @id @default(autoincrement())
  name            String
  email           String    @unique
  password        String
  role            Role      @default(user)
  imageUrl        String? // Display URL of user's profile image
  imagePublicId   String? // Cloudinary public ID for image deletion/updating
  address         String? // User's address/profile location
  products        Product[]
  reviewsGiven    Review[]  @relation("Reviewer")
  reviewsReceived Review[]  @relation("Seller")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Product {
  id            Int       @id @default(autoincrement())
  title         String
  description   String?
  price         Float
  address       String
  latitude      Float // Geographic coordinate
  longitude     Float // Geographic coordinate
  imageUrl      String // Image URL for display
  imagePublicId String // Cloudinary public ID for image management
  postedAt      DateTime  @default(now())
  user          User      @relation(fields: [userId], references: [id])
  userId        Int
  category      Category? @relation(fields: [categoryId], references: [id])
  categoryId    Int?
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  slug      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Review {
  id         Int      @id @default(autoincrement())
  rating     Int // e.g. 1 to 5
  comment    String?
  reviewer   User     @relation("Reviewer", fields: [reviewerId], references: [id])
  reviewerId Int
  seller     User     @relation("Seller", fields: [sellerId], references: [id])
  sellerId   Int
  createdAt  DateTime @default(now())
}
